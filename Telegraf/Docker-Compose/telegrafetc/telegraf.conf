[global_tags]
  user = "windows"
  hostname = "docker-telegraf"
  ip = "127.0.0.1"

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = "s"
  quiet = false
  hostname = ""
  omit_hostname = false

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = true
  report_active = true
  ## Comment this line if you want the raw CPU time metrics
  fielddrop = ["time_*"]

[[inputs.disk]]
  ignore_fs = ["/","/home/*","/home","/mnt/data*","/data*","/mnt/sata*","/mnt/sd*"]

[[inputs.diskio]]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]

[[inputs.net]]
  interfaces = ["eth", "enp0s[0-1]", "ens", "lo"]
  interval = "60s"
  fieldpass = ["packets_*","bytes_*","drop_*","err_*"]

[[inputs.netstat]]
 interval = "5m"
 fielddrop = ["tcp_none","tcp_closing","tcp_close*"]

## docker 的相关配置
# [[inputs.docker]]
#   endpoint = "unix:///var/run/docker.sock"
#   timeout = "5s"
#   perdevice = true
#   perdevice_include = ["cpu","blkio","network"]
#   total = false
#   total_include=["cpu", "blkio", "network"]
#
# [[inputs.docker_log]]
#   endpoint = "unix:///var/run/docker.sock"
#   source_tag = true
#   from_beginning = true
#   timeout = "5s"

[[outputs.prometheus_client]]
  listen = ":9275"

[[aggregators.histogram]]
   period = "60s"
   drop_original = false

[[aggregators.histogram.config]]
  buckets = [0.0, 10.0, 20.0, 30.0, 40.0, 50.0, 60.0, 70.0, 80.0, 90.0, 100.0]
  measurement_name = "cpu"
  fields = ["usage_user","usage_idle"]

[[aggregators.histogram.config]]
  buckets = [0.0, 10.0, 20.0, 30.0, 40.0, 50.0, 60.0, 70.0, 80.0, 90.0, 100.0]
  measurement_name = "mem"
  fields = ["used_percent","available_percent"]

[[aggregators.histogram.config]]
  buckets = [0.0, 10.0, 20.0, 30.0, 40.0, 50.0, 60.0, 70.0, 80.0, 90.0, 100.0, 120.0, 150.0, 200.0, 300.0]
  measurement_name = "system"
  fields = ["load5"]

[[aggregators.histogram.config]]
  buckets = [0.0, 100.0, 200.0, 300.0, 400.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1200.0, 1500.0, 2000.0, 3000.0]
  measurement_name = "processes"
  fields = ["total_threads","total"]